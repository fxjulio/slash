% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/c_alpha.R
\name{Calpha.slash}
\alias{Calpha.slash}
\title{Evaluate C(alpha).}
\usage{
Calpha.slash(Y, test = c("case1", "case2", "equicorr", "mequ", "sequ",
  "msequ"), mu0 = NULL, Sigma0 = NULL, eta0 = NULL)
}
\arguments{
\item{Y}{Matrix of slash samples (n rows and p columns).}

\item{test}{\code{c("case1", "case2", "equicorr", "mequ")}}

\item{mu0}{H0 proposed mu parameter. Default \code{NULL}.}

\item{Sigma0}{H0 proposed Sigma parameter. Default \code{NULL}.}

\item{eta0}{H0 proposed eta parameter. Default \code{NULL}.}
}
\value{
A \code{list} with \code{C.alpha}, \code{p.value}, \code{k1}, estimated values \code{sv}  values
and \code{test} applied.
}
\description{
Evaluate C(alpha) for three cases according knows parameters.
}
\details{
C(alpha) is based in sqrt(n)-consistent estimators. Only three cases are implemented.
Case 1: mu is know
Case 2: Sigma is know
Case 3: 
Case 4: sigma_11=...=sigma_pp and sigma_ij=sigma_lk for i neq j and l neq k
Case 5: mu_1=...=mu_p
Case 6: sigma_11=...=sigma_pp
Case 7: mu_1=...=mu_p and sigma_11=...=sigma_pp
}
\examples{
n <- 1000
p <- 2
eta <- 0.25
Y <- sim.slash( n, rep(0, p), matrix(c(2,0,0,3),2,2), eta )

Calpha.slash( Y, test="case1", mu0=c(0,0) )

Calpha.slash( Y, test="case2", Sigma0=diag(p) )



}
